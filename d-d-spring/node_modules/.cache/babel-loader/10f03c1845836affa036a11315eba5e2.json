{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kuanting/development/recycle-game-sandbox/d-d-spring/src/components/Food.js\";\n\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { DragDropContainer } from \"react-drag-drop-container\";\nimport { useSpring, animated } from \"react-spring\";\nimport clamp from \"lodash-es/clamp\";\nimport { useGesture } from \"react-with-gesture\";\n/* \n    Food is a draggable element (in a DragDropContainer)\n*/\n\nconst Food = props => {\n  const landedOn = e => {\n    console.log('I was dropped on ' + e.dropData.name);\n    console.log({\n      'onDrop event passed back to Food': e\n    });\n  }; // note use of render prop below, rather than child element\n\n\n  return /*#__PURE__*/_jsxDEV(DragDropContainer, {\n    targetKey: props.targetKey,\n    dragClone: props.dragClone || false,\n    dragData: {\n      label: props.label,\n      tastes: props.tastes\n    },\n    customDragElement: props.customDragElement,\n    onDrop: landedOn,\n    render: () => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.image,\n        alt: \"name\",\n        height: \"45\",\n        style: {\n          marginLeft: 40\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 1\n  }, this);\n};\n\n_c = Food;\nexport default Food;\n\nvar _c;\n\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"sources":["/Users/kuanting/development/recycle-game-sandbox/d-d-spring/src/components/Food.js"],"names":["React","DragDropContainer","useSpring","animated","clamp","useGesture","Food","props","landedOn","e","console","log","dropData","name","targetKey","dragClone","label","tastes","customDragElement","image","marginLeft"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA;AACA;AACA;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBF,CAAC,CAACG,QAAF,CAAWC,IAA7C;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAE,0CAAoCF;AAAtC,KAAZ;AACD,GAHD,CADsB,CAOtB;;;AACA,sBAEF,QAAC,iBAAD;AACM,IAAA,SAAS,EAAEF,KAAK,CAACO,SADvB;AAEM,IAAA,SAAS,EAAEP,KAAK,CAACQ,SAAN,IAAmB,KAFpC;AAGM,IAAA,QAAQ,EAAE;AAAEC,MAAAA,KAAK,EAAET,KAAK,CAACS,KAAf;AAAsBC,MAAAA,MAAM,EAAEV,KAAK,CAACU;AAApC,KAHhB;AAIM,IAAA,iBAAiB,EAAEV,KAAK,CAACW,iBAJ/B;AAKM,IAAA,MAAM,EAAEV,QALd;AAMM,IAAA,MAAM,EAAE,MAAM;AACZ,0BAAO;AAAK,QAAA,GAAG,EAAED,KAAK,CAACY,KAAhB;AAAuB,QAAA,GAAG,EAAC,MAA3B;AAAkC,QAAA,MAAM,EAAC,IAAzC;AAA8C,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd;AAArD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AARP;AAAA;AAAA;AAAA;AAAA,UAFE;AAcD,CAtBD;;KAAMd,I;AAuBN,eAAeA,IAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { DragDropContainer } from \"react-drag-drop-container\";\nimport { useSpring, animated } from \"react-spring\";\nimport clamp from \"lodash-es/clamp\";\nimport { useGesture } from \"react-with-gesture\";\n/* \n    Food is a draggable element (in a DragDropContainer)\n*/\n\nconst Food = (props) => {\n  const landedOn = (e) => {\n    console.log('I was dropped on ' + e.dropData.name)\n    console.log({ 'onDrop event passed back to Food': e });\n  }\n\n\n  // note use of render prop below, rather than child element\n  return (\n \n<DragDropContainer\n      targetKey={props.targetKey}\n      dragClone={props.dragClone || false}\n      dragData={{ label: props.label, tastes: props.tastes }}\n      customDragElement={props.customDragElement}\n      onDrop={landedOn}\n      render={() => {\n        return <img src={props.image} alt=\"name\" height=\"45\" style={{ marginLeft: 40 }} />\n      }}\n    />\n  \n  );\n}\nexport default Food;"]},"metadata":{},"sourceType":"module"}